name: 'Cleanup Terraform PR Comments and Labels'
description: 'Delete no-changes comments and labels for a specific Terraform environment'

inputs:
  environment:
    description: 'Environment name (dev or prod)'
    required: true
  prNumber:
    description: 'Pull request number'
    required: true
  githubToken:
    description: 'GitHub token for API access'
    required: true

runs:
  using: 'composite'
  steps:
    - name: Delete no-changes comments
      env:
        GH_TOKEN: ${{ inputs.githubToken }}
      shell: bash
      run: |
        # Delete comments containing "No changes" for this environment
        echo "Looking for comments containing 'No changes' and '${{ inputs.environment }}/'"

        # Get all matching comment URLs
        COMMENT_URLS=$(gh pr view ${{ inputs.prNumber }} --json comments --jq -r '.comments[] | select(.body | contains("No changes") and contains("${{ inputs.environment }}/")) | .url')

        if [ -z "$COMMENT_URLS" ]; then
          echo "No matching comments found to delete"
        else
          echo "Found comment URLs:"
          echo "$COMMENT_URLS"
          echo ""

          # Process each comment URL
          echo "$COMMENT_URLS" | while IFS= read -r comment_url; do
            if [ -n "$comment_url" ]; then
              echo "Processing URL: $comment_url"

              # Extract comment ID from URL (format: https://github.com/owner/repo/pull/123#issuecomment-456789)
              comment_id=$(echo "$comment_url" | sed -n 's/.*#issuecomment-\([0-9]*\).*/\1/p')

              if [ -n "$comment_id" ]; then
                echo "Extracted comment ID: $comment_id"
                API_PATH="/repos/${{ github.repository }}/issues/comments/${comment_id}"
                echo "API path: $API_PATH"
                gh api -X DELETE "$API_PATH" && echo "Successfully deleted comment $comment_id" || echo "Failed to delete comment $comment_id"
              else
                echo "Could not extract comment ID from URL: $comment_url"
              fi
              echo ""
            fi
          done
        fi

    - name: Remove no-changes labels
      env:
        GH_TOKEN: ${{ inputs.githubToken }}
      shell: bash
      run: |
        # Remove labels with /no-changes suffix for this environment
        gh pr view ${{ inputs.prNumber }} --json labels --jq '.labels[].name' | \
          grep "^${{ inputs.environment }}/.*no-changes$" | \
          xargs -I {} gh pr edit ${{ inputs.prNumber }} --remove-label "{}" || true
