name: Terraform - prod

on:
  pull_request:
    branches:
      - main
  push:
    tags:
      - 'v*.*.*'
  workflow_dispatch:
    inputs:
      CHECK_DIFF:
        description: '差分チェックフラグ'
        required: true
        type: choice
        default: '_true'
        options:
          - '_true'
          - '_false'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  AWS_ACCOUNT_ID: '072693953877'
  AWS_ENV_NAME: prod
  OIDC_IAM_ROLE: portfolio-mathquest-terraform-deploy-prod
  CHECK_DIFF: ${{ inputs.CHECK_DIFF || github.event.inputs.CHECK_DIFF || '_false' }}

jobs:
  validate-semver:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: github.event_name == 'push'
    steps:
      - name: Validate SemVer tag
        run: |
          TAG="${{ github.ref_name }}"

          if [[ ! "$TAG" =~ ^v?[0-9]+\.[0-9]+\.[0-9]+(-[a-zA-Z0-9.]+)?(\+[a-zA-Z0-9.]+)?$ ]]; then
            echo "Error: Tag '$TAG' is not a valid SemVer format"
            echo "Expected format: v1.2.3 or 1.2.3 (with optional pre-release and build metadata)"
            exit 1
          fi
          echo "Tag '$TAG' is valid SemVer format"

  set-matrix:
    needs: [validate-semver]
    if: always() && (needs.validate-semver.result == 'success' || needs.validate-semver.result == 'skipped')
    runs-on: ubuntu-latest
    timeout-minutes: 5
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/set-matrix
        id: set-matrix
        with:
          AWS_ENV_NAME: ${{ env.AWS_ENV_NAME }}

  terraform-prod:
    needs: [set-matrix]
    if: ${{ needs.set-matrix.outputs.matrix != '["_empty"]' }}
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      deployments: write
      pull-requests: write
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        directory: ${{ fromJson(needs.set-matrix.outputs.matrix) }}
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/aws-credential
        with:
          oidc-iam-role: arn:aws:iam::${{ env.AWS_ACCOUNT_ID }}:role/${{ env.OIDC_IAM_ROLE }}

      - name: Terraform Plan
        uses: ./.github/actions/terraform-plan
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CONTACT_COUNTRY_CODE: ${{ secrets.CONTACT_COUNTRY_CODE }}
          CONTACT_POSTAL_CODE: ${{ secrets.CONTACT_POSTAL_CODE }}
          CONTACT_ADMINISTRATIVE_AREA: ${{ secrets.CONTACT_ADMINISTRATIVE_AREA }}
          CONTACT_LOCALITY: ${{ secrets.CONTACT_LOCALITY }}
          CONTACT_ADDRESS_LINES: ${{ secrets.CONTACT_ADDRESS_LINES }}
          CONTACT_RECIPIENT: ${{ secrets.CONTACT_RECIPIENT }}
          CONTACT_EMAIL: ${{ secrets.CONTACT_EMAIL }}
          CONTACT_PHONE: ${{ secrets.CONTACT_PHONE }}
          YEARLY_PRICE_CURRENCY: ${{ secrets.YEARLY_PRICE_CURRENCY }}
          YEARLY_PRICE_UNITS: ${{ secrets.YEARLY_PRICE_UNITS }}
        with:
          AWS_ENV_NAME: ${{ env.AWS_ENV_NAME }}
          CHECK_DIFF: ${{ env.CHECK_DIFF }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_PROD }}
          working-directory: ./infra/terraform/envs/${{ env.AWS_ENV_NAME }}/${{ matrix.directory }}
          gcp-workload-identity-provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          gcp-service-account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Start Deployment
        if: env.TF_PLAN_STATUS == 'has-diff' && github.event_name == 'push'
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ env.AWS_ENV_NAME }}

      - name: Terraform Apply
        if: env.TF_PLAN_STATUS == 'has-diff' && github.event_name == 'push'
        uses: ./.github/actions/terraform-apply
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          CONTACT_COUNTRY_CODE: ${{ secrets.CONTACT_COUNTRY_CODE }}
          CONTACT_POSTAL_CODE: ${{ secrets.CONTACT_POSTAL_CODE }}
          CONTACT_ADMINISTRATIVE_AREA: ${{ secrets.CONTACT_ADMINISTRATIVE_AREA }}
          CONTACT_LOCALITY: ${{ secrets.CONTACT_LOCALITY }}
          CONTACT_ADDRESS_LINES: ${{ secrets.CONTACT_ADDRESS_LINES }}
          CONTACT_RECIPIENT: ${{ secrets.CONTACT_RECIPIENT }}
          CONTACT_EMAIL: ${{ secrets.CONTACT_EMAIL }}
          CONTACT_PHONE: ${{ secrets.CONTACT_PHONE }}
          YEARLY_PRICE_CURRENCY: ${{ secrets.YEARLY_PRICE_CURRENCY }}
          YEARLY_PRICE_UNITS: ${{ secrets.YEARLY_PRICE_UNITS }}
        with:
          working-directory: ./infra/terraform/envs/${{ env.AWS_ENV_NAME }}/${{ matrix.directory }}
          gcp-workload-identity-provider: ${{ secrets.GCP_WORKLOAD_IDENTITY_PROVIDER }}
          gcp-service-account: ${{ secrets.GCP_SERVICE_ACCOUNT }}

      - name: Finish Deployment
        if: env.TF_PLAN_STATUS == 'has-diff' && always() && github.event_name == 'push'
        uses: bobheadxi/deployments@v1
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          env: ${{ steps.deployment.outputs.env }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

  delete-pr-comments:
    needs: [terraform-prod]
    if: github.event_name == 'pull_request'
    runs-on: ubuntu-latest
    timeout-minutes: 5
    steps:
      - uses: actions/checkout@v5
      - name: Check and delete comments
        run: |
          chmod +x ./.github/scripts/delete_pr_comments.sh
          ./.github/scripts/delete_pr_comments.sh \
            "tqer39" \
            "mathquest" \
            "${{ env.AWS_ENV_NAME }}" \
            "${{ github.event.pull_request.number }}" \
            "${{ secrets.GITHUB_TOKEN }}"

  workflow-result-terraform-prod:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [terraform-prod]
    if: always()
    steps:
      - name: Failure
        if: >-
          contains(needs.*.result, 'failure')
          || contains(needs.*.result, 'cancelled')
        run: |
          echo "workflow failure"
          exit 1
      - name: Success
        run: |
          echo "workflow success"
